name: 'Image-Scan'
description: 'Scan image with StackRox'
inputs:
  central-endpoint:
    description: 'Central endpoint in the format stackrox.contoso.com:443'
    required: true
  api-token:
    description: 'API token with CI permissions'
    required: true
  image:
    description: 'Full name of the image to scan -- gcr.io/stackrox/testimage:5.1'
    required: true
outputs:
  scan-json:
    description: 'Raw scan JSON'
    value: ${{ steps.scan-info.outputs.scan-info }}
  policy-txt:
    description: 'roxctl image check output'
    value: ${{ steps.scan-check.outputs.scan-check }}
runs:
  using: "composite"
  steps:
    - run: |
        curl -k -L -H "Authorization: Bearer ${{ inputs.api-token }}" https://${{ inputs.central-endpoint }}/api/cli/download/roxctl-linux --output ./roxctl
        chmod +x ./roxctl
      shell: bash
    - id: scan-info
      run: |
        output="$(./roxctl image scan -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }})" || true
        output="${output//'%'/'%25'}"
        output="${output//$'\n'/'%0A'}"
        output="${output//$'\r'/'%0D'}"
        output="${output//$'\''/'\"'}"
        echo ::set-output name=scan-info::"$output"
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash
    - id: scan-check
      run: |
        output="$(./roxctl image check -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }} --json)" || true
        output="${output//'%'/'%25'}"
        output="${output//$'\n'/'%0A'}"
        output="${output//$'\r'/'%0D'}"
        output="${output//$'\''/'\"'}"
        echo ::set-output name=scan-check::"$output"
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash