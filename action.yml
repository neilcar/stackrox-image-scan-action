name: 'Image Scan'
description: 'Scan image with StackRox'
inputs:
  central-endpoint:
    description: 'Central endpoint in the format stackrox.contoso.com:443'
    required: true
  api-token:
    description: 'API token with CI permissions'
    required: true
  image:
    description: 'Full name of the image to scan -- gcr.io/stackrox/testimage:5.1'
    required: true
outputs:
  scan-json:
    description: 'Raw scan JSON'
    value: ${{ steps.image-scan.outputs.scan-json }}
  layers-csv:
    description: 'Layers CSV'
    value: ${{ steps.jq-csv.outputs.layers-csv }}
  policy-txt:
    description: 'roxctl image check output'
    value: ${{ steps.image-check.outputs.policy-txt }}
runs:
  using: "composite"
  steps:
    - run: |
        curl -k -L -H "Authorization: Bearer ${{ inputs.api-token }}" https://${{ inputs.central-endpoint }}/api/cli/download/roxctl-linux --output ./roxctl
        chmod +x ./roxctl
      shell: bash
    - run: echo "./roxctl image scan -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }} > ./image-scan.json"
      id: image-scan
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash
    - run: echo "./roxctl image check -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }} > ./image-check.txt"
      id: image-check
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash
    - name: Upload scan artifact
      uses: actions/upload-artifact@v2
      with:
        name: image-scan.json
        path: ./image-scan.json
    - name: Upload check artifact
      uses: actions/upload-artifact@v2
      with:
        name: image-check.txt
        path: ./image-check.txt
    - run: jq --help
      shell: bash
